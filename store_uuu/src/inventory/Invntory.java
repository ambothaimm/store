/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package inventory;

import com.mysql.cj.jdbc.result.ResultSetMetaData;
import java.awt.HeadlessException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.plaf.basic.BasicInternalFrameUI;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.InputStream;
import javax.imageio.ImageIO;
import javax.swing.table.DefaultTableModel;

public class Invntory extends javax.swing.JInternalFrame {
    
    File f = null;
    String path = null;
    private final ImageIcon format = null;
    String fname = null;
    int s = 0;
    byte[] pimage = null;
    String prod_id;
    private Object date;
    String name;
    String id;
    public Invntory() {
        initComponents();
        this.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        BasicInternalFrameUI ui = (BasicInternalFrameUI) this.getUI();
        ui.setNorthPane(null);
        Connect();
        fetch();
    }
    java.sql.Connection conn;
    PreparedStatement pst;
    java.sql.ResultSet rs;
    
    public void Connect(){
     
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            conn = DriverManager.getConnection("jdbc:mysql://localhost/inventory_store","root","");
        } catch (SQLException ex) {
            Logger.getLogger(Invntory.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Invntory.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    public void fetch(){
           int aq;
       try {
           pst = conn.prepareStatement("SELECT * FROM inventory_jtable");
           rs = pst.executeQuery();
           ResultSetMetaData rss = (ResultSetMetaData) rs.getMetaData();
           aq = rss.getColumnCount();
            DefaultTableModel books = (DefaultTableModel)inventory_tab.getModel();
 
           books.setRowCount(0);
          while(rs.next()){
           books.addRow(new String[]{rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5),rs.getString(6)});
       
       }
           
       } catch (SQLException ex) {
           java.util.logging.Logger.getLogger(Invntory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
       }
         
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Inventory = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        inventory_tab = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        name_txt = new javax.swing.JTextField();
        id_txt = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        price_txt = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        stock_txt = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        date_format = new com.toedter.calendar.JDateChooser();
        pic_ = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        add_button = new javax.swing.JButton();
        updatebutton = new javax.swing.JButton();
        delete_button = new javax.swing.JButton();
        clear_button = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        des_txt = new javax.swing.JTextPane();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();

        Inventory.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Microsoft JhengHei", 1, 18)); // NOI18N
        jLabel2.setText("Inventory");
        Inventory.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 10, 100, 30));

        inventory_tab.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Product ID", "Product Name", "Stock", "Price", "Date"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        inventory_tab.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                inventory_tabMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                inventory_tabMouseEntered(evt);
            }
        });
        jScrollPane1.setViewportView(inventory_tab);

        Inventory.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 50, 680, 480));
        Inventory.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(803, 181, -1, -1));

        jLabel4.setFont(new java.awt.Font("Microsoft JhengHei", 1, 12)); // NOI18N
        jLabel4.setText("Description:");
        Inventory.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 230, -1, 30));

        jLabel6.setFont(new java.awt.Font("Microsoft JhengHei", 1, 12)); // NOI18N
        jLabel6.setText("Product ID:");
        Inventory.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 80, 70, 20));
        Inventory.add(name_txt, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 110, 230, -1));
        Inventory.add(id_txt, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 80, 250, -1));

        jLabel7.setFont(new java.awt.Font("Microsoft JhengHei", 1, 12)); // NOI18N
        jLabel7.setText("Product Name:");
        Inventory.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 110, 90, 20));
        Inventory.add(price_txt, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 170, 280, -1));

        jLabel8.setFont(new java.awt.Font("Microsoft JhengHei", 1, 12)); // NOI18N
        jLabel8.setText("Stock:");
        Inventory.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 140, 40, 20));
        Inventory.add(stock_txt, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 140, 280, -1));

        jLabel9.setFont(new java.awt.Font("Microsoft JhengHei", 1, 12)); // NOI18N
        jLabel9.setText("Price:");
        Inventory.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 170, -1, 20));
        Inventory.add(date_format, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 200, 280, -1));

        pic_.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        Inventory.add(pic_, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 380, 230, 140));

        jButton2.setText("Import");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        Inventory.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, 530, -1, -1));

        add_button.setText("Add");
        add_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                add_buttonActionPerformed(evt);
            }
        });
        Inventory.add(add_button, new org.netbeans.lib.awtextra.AbsoluteConstraints(970, 390, 80, -1));

        updatebutton.setText("Update");
        updatebutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updatebuttonActionPerformed(evt);
            }
        });
        Inventory.add(updatebutton, new org.netbeans.lib.awtextra.AbsoluteConstraints(970, 420, 80, -1));

        delete_button.setText("Delete");
        delete_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delete_buttonActionPerformed(evt);
            }
        });
        Inventory.add(delete_button, new org.netbeans.lib.awtextra.AbsoluteConstraints(970, 450, 80, -1));

        clear_button.setText("Clear");
        clear_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clear_buttonActionPerformed(evt);
            }
        });
        Inventory.add(clear_button, new org.netbeans.lib.awtextra.AbsoluteConstraints(970, 480, 80, -1));

        jScrollPane2.setViewportView(des_txt);

        Inventory.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 230, 250, 140));

        jLabel10.setFont(new java.awt.Font("Microsoft JhengHei", 1, 12)); // NOI18N
        jLabel10.setText("Date:");
        Inventory.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 200, -1, 20));

        jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/inventory/f7220cc4-c619-4bfd-bff8-10db4c79d108.jpg"))); // NOI18N
        jLabel11.setText("jLabel10");
        Inventory.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(-40, -10, -1, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(Inventory, javax.swing.GroupLayout.PREFERRED_SIZE, 1080, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(Inventory, javax.swing.GroupLayout.PREFERRED_SIZE, 600, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

        JFileChooser fileChooser = new JFileChooser();
      fileChooser.showOpenDialog(null);
      File ff = fileChooser.getSelectedFile();
      String paths = ff.getAbsolutePath();
     
       try{
           BufferedImage bi = ImageIO.read(new File(paths));
           Image img = bi.getScaledInstance(pic_.getWidth(), pic_.getHeight(), Image.SCALE_SMOOTH);
           ImageIcon icon = new ImageIcon(img);
           pic_.setIcon(icon);
           path = paths;
        }catch(Exception e){
           JOptionPane.showMessageDialog(null, e);
       }

    }//GEN-LAST:event_jButton2ActionPerformed

         Connection con1;
         PreparedStatement insert; 
         
         private void table_update(){
             
             int c;
             
        java.util.Date selectedDate = date_format.getDate();
        java.text.SimpleDateFormat dateFormat = new java.text.SimpleDateFormat("yyyy-MM-dd");
        System.out.println("Selected Date: " + date_format);
        java.sql.Date sqlDate = new java.sql.Date(selectedDate.getTime());

        try {
            
            String name = name_txt.getText();
            String stock = stock_txt.getText();
            String price = price_txt.getText();
            String formattedDate = dateFormat.format(selectedDate);
            String description = des_txt.getText();
            

            Class.forName("com.mysql.jdbc.Driver");

            con1 = DriverManager.getConnection("jdbc:mysql://localhost/inventory_store","root","");
            insert = con1.prepareStatement("SELECT* FROM inventory_jtable");

            insert.setString(1, name);
            insert.setString(2, stock);
            insert.setString(3, price);
            insert.setDate(4, sqlDate);
            insert.setString(5, description);

            insert.executeUpdate();
            
            JOptionPane.showMessageDialog(this,"Product Added Successfully!");
            
            name_txt.setText("");
            stock_txt.setText("");
            price_txt.setText("");
            date_format.setDate(selectedDate);
            des_txt.setText("");
         
        } catch (ClassNotFoundException | SQLException ex) {
            JOptionPane.showMessageDialog(this, "Error occurred while adding product: " + ex.getMessage());
            Logger.getLogger(Invntory.class.getName()).log(Level.SEVERE, null, ex);
        }
    
         }
 
         
    private void add_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_add_buttonActionPerformed

        java.util.Date selectedDate = date_format.getDate();
        java.text.SimpleDateFormat dateFormat = new java.text.SimpleDateFormat("yyyy-MM-dd");
        System.out.println("Selected Date: " + date_format);
        java.sql.Date sqlDate = new java.sql.Date(selectedDate.getTime());
       
        try {
        String name = name_txt.getText();
        String stock = stock_txt.getText();
        String price = price_txt.getText();
        String formattedDate = dateFormat.format(selectedDate);
        String description = des_txt.getText();
            
            

            Class.forName("com.mysql.cj.jdbc.Driver");
        
            con1 = DriverManager.getConnection("jdbc:mysql://localhost/inventory_store","root","");
            insert = con1.prepareStatement("INSERT INTO `inventory_jtable`(Product_name,Stock,Price,Date,Description,Picture) VALUES (?,?,?,?,?,?)");
            insert.setString(1, name);
            insert.setString(2, stock);
            insert.setString(3, price);
            insert.setString(4, formattedDate);
            insert.setString(5, description);
            InputStream is = new FileInputStream(new File(path));
            insert.setBlob(6, is);
            
            
             
            insert.execute();
            
            
            JOptionPane.showMessageDialog(this,"Product Added Successfully!");
            
            fetch();
            name_txt.setText("");
            stock_txt.setText("");
            price_txt.setText("");
            des_txt.setText("");
            date_format.setDate(null);
            pic_.setIcon(null);
            
            
                   
        } catch (ClassNotFoundException | SQLException ex) {
            JOptionPane.showMessageDialog(this, "Error occurred while adding product: " + ex.getMessage());
            Logger.getLogger(Invntory.class.getName()).log(Level.SEVERE, null, ex);
        } catch (FileNotFoundException ex) {
            Logger.getLogger(Invntory.class.getName()).log(Level.SEVERE, null, ex);
        }
        
                 
    }//GEN-LAST:event_add_buttonActionPerformed

    private void clear_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clear_buttonActionPerformed
         
        id_txt.setText("");
        name_txt.setText("");
        stock_txt.setText("");
        price_txt.setText("");
        des_txt.setText("");
        date_format.setDate(null);
     
        
    }//GEN-LAST:event_clear_buttonActionPerformed

    private void delete_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delete_buttonActionPerformed
try{
          DefaultTableModel table = (DefaultTableModel)inventory_tab.getModel();
          int i = inventory_tab.getSelectedRow();
          id = inventory_tab.getValueAt(i, 0).toString();
                      
          Class.forName("com.mysql.cj.jdbc.Driver");

        
            insert = conn.prepareStatement("DELETE FROM inventory_jtable WHERE Product_ID = '"+id+"'");
            int ka = insert.executeUpdate();
            if(ka==1){
                if(i >= 0 ){
                   table.removeRow(i);
                   JOptionPane.showMessageDialog(this, "Deleted successfully!");
                   
                }else{
                                       JOptionPane.showMessageDialog(this, "Please, select first");

                }
            }
            
        id_txt.setText("");
        name_txt.setText("");
        stock_txt.setText("");
        price_txt.setText("");
        des_txt.setText("");
        date_format.setDate(null);
        pic_.setIcon(null);
     
            tableStart();
            
            
            
            
            
            
            
            
            /* try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            
            insert = conn.prepareStatement("DELETE FROM `inventory_jtable` WHERE 0 = ?");
           
            DefaultTableModel dtm = (DefaultTableModel)inventory_tab.getModel();
            int index = inventory_tab.getSelectedRow();
            int id = Integer.parseInt(dtm.getValueAt(index, 0).toString());
            int dialogMessage = JOptionPane.showConfirmDialog(null, "Do you really want to delete this product?", "Warning!", JOptionPane.YES_NO_OPTION);
            
            if (dialogMessage == JOptionPane.YES_OPTION){
            
            insert.setInt(1, id);
            insert.executeUpdate();
            
            }
            } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(Invntory.class.getName()).log(Level.SEVERE, null, ex);
            }
        */      } catch (SQLException ex) {
            Logger.getLogger(Invntory.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Invntory.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_delete_buttonActionPerformed

    private void updatebuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updatebuttonActionPerformed

       java.util.Date selectedDate = date_format.getDate();
       java.text.SimpleDateFormat dateFormat = new java.text.SimpleDateFormat("yyyy-MM-dd");
       System.out.println("Selected Date: " + date_format);
       java.sql.Date sqlDate = new java.sql.Date(selectedDate.getTime());
       
        String ID = id_txt.getText();
        String name = name_txt.getText();
        int price = Integer.parseInt(price_txt.getText());
        int stock = Integer.parseInt(stock_txt.getText());
        String formattedDate = dateFormat.format(selectedDate);
        String description = des_txt.getText();
        
         try {
            String Product_ID;
           
           String query = "UPDATE `inventory_jtable` SET `Product_ID`='[value-1]',`Product_name`='[value-2]',`Stock`='[value-3]',`Price`='[value-4]',`Date`='[value-5]',`Description`='[value-6]',`Picture`='[value-7]' WHERE Product_ID='"+id_txt+"' ";
           if(name.isEmpty()&&ID.isEmpty()){
            JOptionPane.showMessageDialog(this, "All data is required. Please try again.");
            }else{                  
            pst = conn.prepareStatement(query);
            
            pst.setString(0, ID);
            pst.setString(1, name);
            pst.setInt(2, stock);
            pst.setInt(3, price);
            insert.setString(4, formattedDate);
            pst.setString(5, description );  
            InputStream is = new FileInputStream(new File(path));
            pst.setBlob(6, is);
            int ka=pst.executeUpdate();
            
            
            if(ka==1){
                fetch();
                fetch2();
                
             JOptionPane.showMessageDialog(this, "Product updated successfully!");
             
            name_txt.setText("");
            stock_txt.setText("");
            price_txt.setText("");
            date_format.setDate(selectedDate);
            des_txt.setText("");
            // imagePath.setText(null);
            }
 
            }
        } catch (SQLException ex) {
            Logger.getLogger(Invntory.class.getName()).log(Level.SEVERE, null, ex);
        } catch (FileNotFoundException ex) {
            Logger.getLogger(Invntory.class.getName()).log(Level.SEVERE, null, ex);
        }
    
    }//GEN-LAST:event_updatebuttonActionPerformed

    private void inventory_tabMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_inventory_tabMouseClicked

        //DefaultTableMo
    }//GEN-LAST:event_inventory_tabMouseClicked

    private void inventory_tabMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_inventory_tabMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_inventory_tabMouseEntered


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Inventory;
    private javax.swing.JButton add_button;
    private javax.swing.JButton clear_button;
    private com.toedter.calendar.JDateChooser date_format;
    private javax.swing.JButton delete_button;
    private javax.swing.JTextPane des_txt;
    private javax.swing.JTextField id_txt;
    private javax.swing.JTable inventory_tab;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField name_txt;
    private javax.swing.JLabel pic_;
    private javax.swing.JTextField price_txt;
    private javax.swing.JTextField stock_txt;
    private javax.swing.JButton updatebutton;
    // End of variables declaration//GEN-END:variables

    private void fetch2() {
    }

    private void tableStart() {
    }
    

    

   

   
}
